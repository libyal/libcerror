# Test build of library to determine code coverage on Ubuntu
name: test_build_ubuntu
on:
  push:
    branches: [master]
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ubuntu-latest]
        architecture: ['x86', 'x64']
        compiler: [gcc]
    steps:
    - uses: actions/checkout@v2
    - name: Install build dependencies
      run: |
        sudo apt-get -y install autoconf automake autopoint build-essential curl git libtool pkg-config
    - name: Download test data
      run: |
        if test -x "synctestdata.sh"; then ./synctestdata.sh; fi
    - name: Prepare build
      run: |
        ./synclibs.sh --use-head
        ./autogen.sh
    - name: Build
      env:
        CC: ${{ matrix.compiler }}
      run: |
        ./configure --enable-shared=no CFLAGS="--coverage -O0" CPPFLAGS="-DOPTIMIZATION_DISABLED" LDFLAGS="--coverage"
        make > /dev/null
    - name: Run tests
      run: |
        make check CHECK_WITH_STDERR=1 SKIP_TOOLS_END_TO_END_TESTS=1
    - name: Generate coverage data
      run: |
        for DIRECTORY in `find . -maxdepth 1 -type d`; do \
          (cd ${DIRECTORY} && find . -maxdepth 1 -name \*.gcno -type f -exec gcov -pb {} \;) \
        done
    - name: Upload coverage data
      run: |
        curl -o codecov.sh -s https://codecov.io/bash
        ./codecov.sh -n linux-gcc-no-optimization -X gcov;
